- hosts: 127.0.0.1
  gather_facts: true
  become: no # sudoで行わない
  user: vagrant
  vars:
    rbenv:
      env: system
      version: v1.0.0
      ruby_version: 2.3.1

    rbenv_users: vagrant
    rbenv_group: vagrant

    nginx_remove_default_vhost: true

    java_packages: openjdk-8-jdk

    elasticsearch:
      network_host: 0.0.0.0
      http_port: 9200

    kibana:
      host: "0.0.0.0"
      port: 5601
      tarball: "kibana-4.5.1-linux-x64"
      install_dir: "/usr/share/kibana4/"
      elasticsearch:
        host: localhost
        port: 9200

    redis_bind_interface: 0.0.0.0

    postgresql_version: 9.5
    postgresql_encoding: "UTF-8"
    postgresql_locale: "en_US.UTF-8"
    postgresql_listen_addresses: "*"
    postgresql_pg_hba_trust_hosts:
      - "192.168.38.0/0"
    postgresql_databases:
      - name: elib
        hstore: yes
        uuid_ossp: yes
        citext: yes
    postgresql_users:
      - name: elib
        pass: elib
        encrypted: no

  environment:
    ansible_python_interpreter: /usr/bin/python2.7

  pre_tasks:
    - name: installing repo
      apt_repository: repo="{{ item }}"
      become: yes
      with_items:
        - ppa:ansible/ansible
        - ppa:openjdk-r/ppa

    - name: Get ansible_user home directory
      shell: 'getent passwd "{{ansible_ssh_user}}" | cut -d: -f6'
      register: ansible_home_result
      changed_when: false
      always_run: yes

    - name: Set the fact for the other scripts to use
      set_fact: ansible_home='{{ansible_home_result.stdout}}'

  roles:
    - geerlingguy.nginx
    - geerlingguy.java
    - geerlingguy.elasticsearch
    # - sansible.kibana
    - geerlingguy.redis
    - ANXS.postgresql
    # # - zzet.rbenv

  tasks:
    - name: add some repository
      apt_repository: repo="{{ item }}"
      become: yes
      with_items:
        - ppa:ansible/ansible

    - name: install develop tools
      apt: name={{ item }} state=latest update_cache=yes
      become: yes
      with_items:
        - build-essential
        - language-pack-ja
        - vim
        # - emacs24-nox
        # - openssl
        # - curl
        # - wget
        # - unzip
        # - git-core
        # - bison
        # - nkf # 文字コード変換
        # - sqlite3
        # - autoconf
        # - python-dev
        # - python-pip
        # - python3
        # - python3-dev
        # - python3-pip
        # - nodejs
        # - npm
        # - libyaml-dev
        # - libsqlite3-dev
        # - libreadline-dev
        # - libssl-dev
        # - zlib1g-dev
        # - libxml2-dev
        # - libxslt1-dev
        # - libffi-dev
        # - libcurl4-openssl-dev
        # - libncurses5-dev
        # - libpcre3-dev
        # - libgdbm-dev
        # - libbz2-dev
        # - libpq-dev # postgreSQL用
        # - libmysqlclient-dev # MySQL用
        # - libmongo-client-dev # mongoDB用

    - name: set locale ja
      locale_gen: name=ja_JP.UTF-8 state=present

    - name: copy gemrc config
      template: src=templates/.gemrc dest={{item}} mode=0644
      with_items:
        - "{{ ansible_home }}/.gemrc"

    - name: configure elasticsearch
      template: src=templates/elasticsearch.yml.j2 dest=/etc/elasticsearch/elasticsearch.yml
                owner=root group=elasticsearch mode=0750
      notify:
        - restart elasticsearch

    # - name: restart elasticsearch
    #   service: name=elasticsearch state=restarted
    #   become: yes


    - name: configure nginx
      become: yes
      template: src=templates/default.conf dest=/etc/nginx/conf.d/default.conf mode=0644
      notify:
        - restart nginx

    # - name: remove kibana config files for nginx
    #   file: path=/etc/nginx/conf.d/kibana.conf state=absent
    #   become: yes
    #   notify:
    #     - restart nginx
    #
    # - name: check installed plugins for elasticsearch
    #   shell: /usr/share/elasticsearch/bin/plugin list | awk '{print $2}'
    #   become: yes
    #
    # - name: install plugins for elasticsearch
    #   shell: /usr/share/elasticsearch/bin/plugin install {{ items }}
    #   become: yes
    #   with_items:
    #     - license
    #     - marvel-agent # パーミッション？ y が必要
    #
    # - name: check installed plugins for kibana
    #   shell: /usr/share/kibana4/bin/plugin list | awk '{print $2}'
    #   become: yes
    #
    # - name: install plugins for kibana
    #   shell: /usr/share/kibana4/bin/plugin --install {{ items }}
    #   become: yes
    #   with_items:
    #     - elasticsearch/marvel/2.3.3
